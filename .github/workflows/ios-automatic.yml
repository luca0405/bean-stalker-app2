name: iOS Build - Automatic Certificate Management
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npm run build
      
    - name: Sync Capacitor
      run: npx cap sync ios
      
    - name: Setup iOS signing
      uses: apple-actions/import-codesign-certs@v2
      with:
        create-keychain: true
        keychain: ios-build.keychain
        keychain-password: temporary_password
        
    - name: Download provisioning profiles
      uses: apple-actions/download-provisioning-profiles@v2
      with:
        bundle-id: com.beanstalker.member
        profile-type: IOS_APP_STORE
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        
    - name: Build and archive
      run: |
        cd ios
        xcodebuild \
          -workspace App/App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath App.xcarchive \
          -authenticationKeyIssuerID ${{ secrets.APPSTORE_ISSUER_ID }} \
          -authenticationKeyID ${{ secrets.APPSTORE_API_KEY_ID }} \
          -authenticationKeyPath ${{ runner.temp }}/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
          -allowProvisioningUpdates \
          CODE_SIGN_STYLE=Automatic \
          DEVELOPMENT_TEAM=A43TZWNYA3 \
          archive
          
    - name: Export for App Store
      run: |
        cd ios
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>A43TZWNYA3</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>manageAppVersionAndBuildNumber</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        xcodebuild \
          -exportArchive \
          -archivePath App.xcarchive \
          -exportPath . \
          -exportOptionsPlist ExportOptions.plist \
          -authenticationKeyIssuerID ${{ secrets.APPSTORE_ISSUER_ID }} \
          -authenticationKeyID ${{ secrets.APPSTORE_API_KEY_ID }} \
          -authenticationKeyPath ${{ runner.temp }}/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
          -allowProvisioningUpdates
          
    - name: Upload to TestFlight
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: ios/App.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/App.ipa
          ios/App.xcarchive