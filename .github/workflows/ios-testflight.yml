name: iOS TestFlight with Fastlane

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Build React App
      run: npm run build
      
    - name: Sync Capacitor
      run: npx cap sync ios
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        working-directory: ios/App
        
    - name: Create Fastlane Gemfile
      working-directory: ios/App
      run: |
        cat > Gemfile << EOF
        source "https://rubygems.org"
        gem "fastlane"
        EOF
        bundle install
        
    - name: Create Fastlane Configuration
      working-directory: ios/App
      run: |
        mkdir -p fastlane
        
        cat > fastlane/Fastfile << 'EOF'
        default_platform(:ios)

        platform :ios do
          desc "Build and upload to TestFlight"
          lane :testflight do
            # Import certificate
            import_certificate(
              certificate_path: "dist_cert.p12",
              certificate_password: ENV["IOS_CERT_PASSWORD"],
              keychain_name: "login.keychain",
              keychain_password: ""
            )
            
            # Install provisioning profile
            install_provisioning_profile(path: "profile.mobileprovision")
            
            # Update project settings
            update_project_provisioning(
              xcodeproj: "App.xcodeproj",
              target_filter: "App",
              profile: "profile.mobileprovision",
              build_configuration: "Release"
            )
            
            # Build archive
            build_app(
              workspace: "App.xcworkspace",
              scheme: "App",
              configuration: "Release",
              export_method: "app-store",
              export_options: {
                teamID: "A43TZWNYA3",
                method: "app-store",
                uploadBitcode: false,
                uploadSymbols: true,
                compileBitcode: false
              }
            )
            
            # Upload to TestFlight
            upload_to_testflight(
              api_key_path: "AuthKey.p8",
              skip_waiting_for_build_processing: true
            )
          end
        end
        EOF
        
    - name: Setup Certificates and Profiles
      working-directory: ios/App
      run: |
        # Decode certificate
        echo "${{ secrets.IOS_DISTRIBUTION_CERT }}" | base64 --decode > dist_cert.p12
        
        # Decode provisioning profile
        echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > profile.mobileprovision
        
        # Create API key file
        echo "${{ secrets.APPSTORE_PRIVATE_KEY }}" > AuthKey.p8
        
    - name: Run Fastlane
      working-directory: ios/App
      env:
        IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      run: bundle exec fastlane testflight