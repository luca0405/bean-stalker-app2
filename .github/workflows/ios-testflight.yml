name: iOS TestFlight Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    name: Build and Deploy to TestFlight
    runs-on: macos-14
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install Dependencies
      run: |
        npm ci --prefer-offline --no-audit --silent
        
    - name: Build Web Application
      run: |
        NODE_ENV=production npm run build
        
    - name: Setup iOS Environment
      run: |
        sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer
        gem install cocoapods --no-document --quiet
        
    - name: Sync Capacitor
      run: |
        npx cap sync ios
        
    - name: Install iOS Dependencies
      working-directory: ios/App
      run: |
        rm -rf Pods/ Podfile.lock .symlinks/
        pod install --silent || pod install --verbose
        
    - name: Import Code Signing Certificates
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_CERT }}
        p12-password: ${{ secrets.IOS_CERT_PASSWORD }}
        
    - name: Install Provisioning Profile
      run: |
        echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > ~/profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        
        # Debug: Check profile content
        echo "=== Profile content check ==="
        security cms -D -i ~/profile.mobileprovision | grep -A5 "application-identifier" || echo "Failed to read profile"
        
        # Get UUID and name from profile
        PROFILE_UUID=$(security cms -D -i ~/profile.mobileprovision | grep -A1 '<key>UUID</key>' | grep '<string>' | sed 's/<[^>]*>//g' | xargs)
        PROFILE_NAME=$(security cms -D -i ~/profile.mobileprovision | grep -A1 '<key>Name</key>' | grep '<string>' | sed 's/<[^>]*>//g' | xargs)
        
        # Install with UUID as filename
        cp ~/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision
        
        # Verify installation
        echo "=== Installed profiles ==="
        ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
        
        echo "PROFILE_NAME=$PROFILE_NAME" >> $GITHUB_ENV
        echo "PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV
        echo "Installed profile: $PROFILE_NAME with UUID: $PROFILE_UUID"
        
    - name: Build iOS Archive
      working-directory: ios/App
      run: |
        # Debug: Show available profiles
        echo "=== Available provisioning profiles ==="
        ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # Debug: Show what we're trying to use
        echo "Using Profile Name: $PROFILE_NAME"
        echo "Using Profile UUID: $PROFILE_UUID"
        
        # Set up manual signing with proper provisioning profile
        sed -i '' "s/PROVISIONING_PROFILE_SPECIFIER = \"\";/PROVISIONING_PROFILE_SPECIFIER = \"$PROFILE_NAME\";/g" App.xcodeproj/project.pbxproj
        
        # Debug: Show project settings
        echo "=== Project settings after modification ==="
        grep -A3 -B3 "PROVISIONING_PROFILE_SPECIFIER" App.xcodeproj/project.pbxproj
        
        xcodebuild archive \
          -workspace App.xcworkspace \
          -scheme App \
          -destination "generic/platform=iOS" \
          -archivePath build.xcarchive \
          -configuration Release \
          CODE_SIGN_IDENTITY="iPhone Distribution" \
          CODE_SIGN_STYLE=Manual \
          DEVELOPMENT_TEAM=A43TZWNYA3 \
          PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME"
          
    - name: Export IPA
      working-directory: ios/App
      run: |
        xcodebuild -exportArchive \
          -archivePath build.xcarchive \
          -exportPath build \
          -exportOptionsPlist ../../.github/workflows/ExportOptions.plist
          
    - name: Upload to TestFlight
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: ios/App/build/App.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/App/build/
          ios/App/build.xcarchive