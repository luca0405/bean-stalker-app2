name: iOS TestFlight Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    name: Build and Deploy to TestFlight
    runs-on: macos-14
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install Dependencies
      run: |
        npm ci --prefer-offline --no-audit --silent
        
    - name: Build Web Application
      run: |
        NODE_ENV=production npm run build
        
    - name: Setup iOS Environment
      run: |
        sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer
        gem install cocoapods --no-document --quiet
        
    - name: Sync Capacitor
      run: |
        npx cap sync ios
        
    - name: Install iOS Dependencies
      working-directory: ios/App
      run: |
        rm -rf Pods/ Podfile.lock .symlinks/
        pod install --silent || pod install --verbose
        
    - name: Import Code Signing Certificates
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_CERT }}
        p12-password: ${{ secrets.IOS_CERT_PASSWORD }}
        
    - name: Install Provisioning Profile and Certificate
      run: |
        # Install provisioning profile with proper parsing
        echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > ~/profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        
        # Extract profile to readable plist format  
        security cms -D -i ~/profile.mobileprovision -o ~/profile.plist
        PROFILE_UUID=$(plutil -extract UUID raw ~/profile.plist)
        PROFILE_NAME=$(plutil -extract Name raw ~/profile.plist)
        
        # Install with proper UUID filename
        cp ~/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision
        
        # Find the distribution certificate
        CERT_NAME=$(security find-identity -v -p codesigning | grep "iPhone Distribution" | head -1 | sed 's/.*) //' | sed 's/ ".*//')
        
        echo "Profile Name: $PROFILE_NAME"
        echo "Profile UUID: $PROFILE_UUID" 
        echo "Certificate: $CERT_NAME"
        
        echo "PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV
        echo "PROFILE_NAME=$PROFILE_NAME" >> $GITHUB_ENV
        echo "CERT_NAME=$CERT_NAME" >> $GITHUB_ENV
        
    - name: Build iOS Archive
      working-directory: ios/App
      run: |
        # Debug info
        echo "Using Profile UUID: $PROFILE_UUID"
        echo "Using Certificate: $CERT_NAME"
        
        # Keep everything automatic but override signing at build time
        # This prevents Pods from inheriting manual signing settings
        
        xcodebuild clean archive \
          -workspace App.xcworkspace \
          -scheme App \
          -destination "generic/platform=iOS" \
          -archivePath build.xcarchive \
          -configuration Release \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          DEVELOPMENT_TEAM=A43TZWNYA3 \
          PRODUCT_BUNDLE_IDENTIFIER=com.beanstalker.member
          
    - name: Export IPA
      working-directory: ios/App
      run: |
        xcodebuild -exportArchive \
          -archivePath build.xcarchive \
          -exportPath build \
          -exportOptionsPlist ../../.github/workflows/ExportOptions.plist
          
    - name: Upload to TestFlight
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: ios/App/build/App.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-artifacts
        path: |
          ios/App/build/
          ios/App/build.xcarchive