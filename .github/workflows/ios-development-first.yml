name: iOS Development Build First
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npm run build
      
    - name: Sync Capacitor
      run: npx cap sync ios
      
    - name: Setup App Store Connect API
      run: |
        mkdir -p ~/private_keys
        echo "${{ secrets.APPSTORE_API_PRIVATE_KEY }}" > ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
        chmod 600 ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
        
    - name: Build for development (uses existing Development certificates)
      run: |
        cd ios
        
        echo "Building for development using existing Development certificates..."
        xcodebuild \
          -workspace App/App.xcworkspace \
          -scheme App \
          -configuration Debug \
          -destination generic/platform=iOS \
          -archivePath App-Dev.xcarchive \
          -authenticationKeyIssuerID "${{ secrets.APPSTORE_ISSUER_ID }}" \
          -authenticationKeyID "${{ secrets.APPSTORE_API_KEY_ID }}" \
          -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          CODE_SIGN_STYLE=Automatic \
          CODE_SIGN_IDENTITY="Apple Development" \
          DEVELOPMENT_TEAM=A43TZWNYA3 \
          archive
          
        echo "Development build successful!"
        
    - name: Try to create Distribution certificate and build for App Store
      run: |
        cd ios
        
        echo "Attempting to build for App Store (will create Distribution certificate if needed)..."
        xcodebuild \
          -workspace App/App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath App.xcarchive \
          -authenticationKeyIssuerID "${{ secrets.APPSTORE_ISSUER_ID }}" \
          -authenticationKeyID "${{ secrets.APPSTORE_API_KEY_ID }}" \
          -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          CODE_SIGN_STYLE=Automatic \
          CODE_SIGN_IDENTITY="Apple Distribution" \
          DEVELOPMENT_TEAM=A43TZWNYA3 \
          archive || {
            echo "Distribution build failed, checking available certificates..."
            security find-identity -v -p codesigning
            
            echo "Trying with any available certificate..."
            xcodebuild \
              -workspace App/App.xcworkspace \
              -scheme App \
              -configuration Release \
              -destination generic/platform=iOS \
              -archivePath App.xcarchive \
              -authenticationKeyIssuerID "${{ secrets.APPSTORE_ISSUER_ID }}" \
              -authenticationKeyID "${{ secrets.APPSTORE_API_KEY_ID }}" \
              -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
              -allowProvisioningUpdates \
              -allowProvisioningDeviceRegistration \
              CODE_SIGN_STYLE=Automatic \
              DEVELOPMENT_TEAM=A43TZWNYA3 \
              archive
          }
          
    - name: Export for App Store (if archive succeeded)
      run: |
        cd ios
        
        if [ -d "App.xcarchive" ]; then
          echo "Creating export options for App Store..."
          cat > ExportOptions.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>development</string>
            <key>teamID</key>
            <string>A43TZWNYA3</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>signingStyle</key>
            <string>automatic</string>
        </dict>
        </plist>
        EOF
        
          echo "Exporting archive..."
          xcodebuild \
            -exportArchive \
            -archivePath App.xcarchive \
            -exportPath export \
            -exportOptionsPlist ExportOptions.plist \
            -authenticationKeyIssuerID "${{ secrets.APPSTORE_ISSUER_ID }}" \
            -authenticationKeyID "${{ secrets.APPSTORE_API_KEY_ID }}" \
            -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
            -allowProvisioningUpdates
            
          echo "Export completed!"
          ls -la export/
        else
          echo "No archive found to export"
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-development-build
        path: |
          ios/App.xcarchive
          ios/App-Dev.xcarchive
          ios/export/