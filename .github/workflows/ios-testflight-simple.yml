name: iOS TestFlight Distribution (Simple)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Build React App
      run: npm run build
      
    - name: Sync Capacitor
      run: npx cap sync ios
      
    - name: Install iOS Certificate
      uses: apple-actions/import-codesign-certs@v3
      with:
        p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_CERT }}
        p12-password: ${{ secrets.IOS_CERT_PASSWORD }}
        
    - name: Install Provisioning Profile
      run: |
        echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # Get profile info
        PROFILE_UUID=$(security cms -D -i profile.mobileprovision | plutil -extract UUID raw -)
        PROFILE_NAME=$(security cms -D -i profile.mobileprovision | plutil -extract Name raw -)
        
        echo "Profile UUID: $PROFILE_UUID"
        echo "Profile Name: $PROFILE_NAME"
        echo "PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV
        echo "PROFILE_NAME=$PROFILE_NAME" >> $GITHUB_ENV
        
    - name: Configure Xcode Project
      working-directory: ios/App
      run: |
        # Set team and bundle ID
        sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = A43TZWNYA3;/g' App.xcodeproj/project.pbxproj
        sed -i '' "s/PROVISIONING_PROFILE_SPECIFIER = \"\";/PROVISIONING_PROFILE_SPECIFIER = \"$PROFILE_NAME\";/g" App.xcodeproj/project.pbxproj
        
        # Force manual signing for Release only
        sed -i '' '/name = Release;/,/name = Debug;/{
          s/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g
          s/CODE_SIGN_IDENTITY = "iPhone Developer";/CODE_SIGN_IDENTITY = "iPhone Distribution";/g
        }' App.xcodeproj/project.pbxproj
        
    - name: Build Archive
      working-directory: ios/App
      run: |
        set -o pipefail
        xcodebuild clean archive \
          -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination "generic/platform=iOS" \
          -archivePath App.xcarchive \
          | xcpretty
          
    - name: Export IPA
      working-directory: ios/App
      run: |
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>A43TZWNYA3</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
        </dict>
        </plist>
        EOF
        
        xcodebuild -exportArchive \
          -archivePath App.xcarchive \
          -exportPath export \
          -exportOptionsPlist ExportOptions.plist
          
    - name: Upload to TestFlight
      uses: apple-actions/upload-testflight-build@v1
      with:
        app-path: ios/App/export/App.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}