name: iOS Build and TestFlight Upload

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-13
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npx vite build
      
    - name: Setup Capacitor
      run: |
        npx cap sync ios
        # Ensure Podfile changes are applied
        cd ios/App
        pod repo update
      
    - name: Setup Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Install CocoaPods dependencies
      run: |
        cd ios/App
        # Complete clean rebuild of Pod configurations
        pod cache clean --all
        rm -rf Pods
        rm -f Podfile.lock
        pod install --repo-update
        
        # Force remove any provisioning profile references from Pods project
        if [ -f "Pods/Pods.xcodeproj/project.pbxproj" ]; then
          # Remove all provisioning profile references
          sed -i '' '/PROVISIONING_PROFILE_SPECIFIER/d' Pods/Pods.xcodeproj/project.pbxproj
          sed -i '' '/PROVISIONING_PROFILE/d' Pods/Pods.xcodeproj/project.pbxproj  
          sed -i '' '/3e5a5ece-8f82-46a0-bfaf-33bf272601ca/d' Pods/Pods.xcodeproj/project.pbxproj
          
          # Set CODE_SIGN_STYLE to Automatic for all configurations
          sed -i '' 's/CODE_SIGN_STYLE = Manual;/CODE_SIGN_STYLE = Automatic;/g' Pods/Pods.xcodeproj/project.pbxproj
          
          # Remove development team from Pods
          sed -i '' '/DEVELOPMENT_TEAM.*=.*'"${{ secrets.TEAM_ID }}"'/d' Pods/Pods.xcodeproj/project.pbxproj
          
          echo "Modified Pods project file to remove provisioning conflicts"
          # Verify changes
          grep -c "PROVISIONING_PROFILE" Pods/Pods.xcodeproj/project.pbxproj || echo "No provisioning profile references found"
        fi
        
    - name: Verify iOS project settings
      run: |
        cd ios/App
        echo "=== Checking main App target signing ==="
        xcodebuild -project App.xcodeproj -target App -showBuildSettings | grep -E "(CODE_SIGN|PROVISIONING)"
        echo "=== Checking Pods project signing ==="
        xcodebuild -project Pods/Pods.xcodeproj -showBuildSettings | grep -E "(CODE_SIGN|PROVISIONING)" | head -10
        
    - name: Import signing certificate
      run: |
        # Create temporary keychain
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Import certificate
        echo "${{ secrets.IOS_DISTRIBUTION_CERT }}" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "${{ secrets.IOS_CERT_PASSWORD }}" -T /usr/bin/codesign -T /usr/bin/xcodebuild
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
        
        # List available certificates for debugging
        security find-identity -v -p codesigning build.keychain
        
    - name: Install provisioning profile
      run: |
        echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        
        # Get the UUID from the provisioning profile
        PROFILE_UUID=$(grep -A1 -a 'UUID' profile.mobileprovision | grep string | sed 's|.*<string>\(.*\)</string>.*|\1|')
        echo "Profile UUID: $PROFILE_UUID"
        
        # Copy with UUID as filename
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision
        
        # List installed profiles for debugging
        ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # Set the provisioning profile UUID for the build
        echo "PROVISIONING_PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV
        
    - name: Build iOS app
      run: |
        cd ios/App
        
        # Simple build using workspace with minimal overrides
        xcodebuild clean archive \
          -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath App.xcarchive \
          DEVELOPMENT_TEAM="${{ secrets.TEAM_ID }}"
          
    - name: Update Export Options
      run: |
        cd .github
        sed -i '' "s/YOUR_TEAM_ID/${{ secrets.TEAM_ID }}/g" ExportOptions.plist
        
    - name: Export IPA
      run: |
        cd ios/App
        xcodebuild -exportArchive \
          -archivePath App.xcarchive \
          -exportPath Export \
          -exportOptionsPlist ../../.github/ExportOptions.plist
          
    - name: Upload to TestFlight
      run: |
        xcrun altool --upload-app \
          --type ios \
          --file ios/App/Export/*.ipa \
          --username "${{ secrets.APPSTORE_USERNAME }}" \
          --password "${{ secrets.APPSTORE_PASSWORD }}"