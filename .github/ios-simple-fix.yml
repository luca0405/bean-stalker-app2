name: iOS Build - Simple Fix
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Xcode 16.2
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Build
      run: |
        npm ci
        npm run build
        npx cap sync ios
        cd ios/App && pod install
        
    - name: Setup API Key
      run: |
        mkdir -p ~/private_keys
        echo "${{ secrets.APPSTORE_API_PRIVATE_KEY }}" > ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
        chmod 600 ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
        
    - name: Setup keychain
      run: |
        security create-keychain -p "temppassword" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "temppassword" build.keychain
        security set-keychain-settings -t 3600 -l build.keychain
        
    - name: Build archive
      run: |
        cd ios
        xcodebuild archive \
          -workspace App/App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath App.xcarchive \
          -authenticationKeyIssuerID "${{ secrets.APPSTORE_ISSUER_ID }}" \
          -authenticationKeyID "${{ secrets.APPSTORE_API_KEY_ID }}" \
          -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration \
          CODE_SIGN_STYLE=Automatic \
          CODE_SIGN_IDENTITY="" \
          PROVISIONING_PROFILE_SPECIFIER="" \
          DEVELOPMENT_TEAM=A43TZWNYA3 \
          PRODUCT_BUNDLE_IDENTIFIER=com.beanstalker.member
        
    - name: Export for App Store
      run: |
        cd ios
        cat > ExportOptions.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>A43TZWNYA3</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>manageAppVersionAndBuildNumber</key>
            <true/>
            <key>stripSwiftSymbols</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        xcodebuild -exportArchive \
          -archivePath App.xcarchive \
          -exportPath export \
          -exportOptionsPlist ExportOptions.plist \
          -authenticationKeyIssuerID "${{ secrets.APPSTORE_ISSUER_ID }}" \
          -authenticationKeyID "${{ secrets.APPSTORE_API_KEY_ID }}" \
          -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8 \
          -allowProvisioningUpdates \
          -allowProvisioningDeviceRegistration
        
    - name: Debug and fix IPA bundle IDs before upload
      run: |
        # Extract and inspect IPA contents
        cd ios/export
        rm -rf Payload 2>/dev/null || true
        unzip -q App.ipa
        echo "=== Original bundle IDs in IPA ==="
        find Payload -name "Info.plist" -exec echo "File: {}" \; -exec plutil -p {} \; | grep -A1 -B1 CFBundleIdentifier
        
        # Fix bundle IDs for each framework individually
        echo "=== Fixing framework bundle IDs ==="
        
        # Capacitor framework
        find Payload -path "*/Frameworks/Capacitor.framework/Info.plist" -exec plutil -replace CFBundleIdentifier -string "com.beanstalker.framework.capacitor" {} \;
        
        # RevenueCat framework
        find Payload -path "*/Frameworks/RevenueCat.framework/Info.plist" -exec plutil -replace CFBundleIdentifier -string "com.beanstalker.framework.revenuecat" {} \;
        
        # PurchasesHybridCommon framework
        find Payload -path "*/Frameworks/PurchasesHybridCommon.framework/Info.plist" -exec plutil -replace CFBundleIdentifier -string "com.beanstalker.framework.hybridcommon" {} \;
        
        # RevenuecatPurchasesCapacitor framework
        find Payload -path "*/Frameworks/RevenuecatPurchasesCapacitor.framework/Info.plist" -exec plutil -replace CFBundleIdentifier -string "com.beanstalker.framework.revenuecatpurchases" {} \;
        
        # CapacitorNativeBiometric framework
        find Payload -path "*/Frameworks/CapacitorNativeBiometric.framework/Info.plist" -exec plutil -replace CFBundleIdentifier -string "com.beanstalker.framework.biometric" {} \;
        
        # Cordova framework
        find Payload -path "*/Frameworks/Cordova.framework/Info.plist" -exec plutil -replace CFBundleIdentifier -string "com.beanstalker.framework.cordova" {} \;
        
        echo "=== Verifying fixed bundle IDs ==="
        find Payload -name "Info.plist" -exec echo "File: {}" \; -exec plutil -p {} \; | grep -A1 -B1 CFBundleIdentifier
        
        echo "=== Re-signing modified app bundle ==="
        # Re-sign the main app bundle after modifications
        codesign --force --sign "iPhone Distribution" \
          --entitlements "Payload/App.app/App.entitlements" \
          --timestamp \
          "Payload/App.app" || {
          echo "Main app signing failed, trying with automatic identity..."
          codesign --force --sign "-" \
            --timestamp \
            "Payload/App.app"
        }
        
        # Re-sign all frameworks
        find Payload/App.app/Frameworks -name "*.framework" -exec codesign --force --sign "iPhone Distribution" --timestamp {} \; || {
          echo "Framework signing with distribution cert failed, using automatic..."
          find Payload/App.app/Frameworks -name "*.framework" -exec codesign --force --sign "-" --timestamp {} \;
        }
        
        # Repackage the signed IPA
        rm -f App-fixed.ipa
        zip -qr App-fixed.ipa Payload
        
    - name: Upload re-signed IPA to TestFlight
      run: |
        xcrun altool --upload-app \
          --type ios \
          --file "ios/export/App-fixed.ipa" \
          --apiKey "${{ secrets.APPSTORE_API_KEY_ID }}" \
          --apiIssuer "${{ secrets.APPSTORE_ISSUER_ID }}" \
          --verbose
        
    - name: Save build
      uses: actions/upload-artifact@v4
      with:
        name: bean-stalker-simple
        path: ios/export/App.ipa