name: iOS Build and TestFlight Upload

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-13
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npx vite build
      
    - name: Setup Capacitor
      run: npx cap sync ios
      
    - name: Setup Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Import signing certificate
      run: |
        # Create temporary keychain
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Import certificate
        echo "${{ secrets.IOS_DISTRIBUTION_CERT }}" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "${{ secrets.IOS_CERT_PASSWORD }}" -T /usr/bin/codesign -T /usr/bin/xcodebuild
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
        
        # List available certificates for debugging
        security find-identity -v -p codesigning build.keychain
        
    - name: Install provisioning profile
      run: |
        echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        
        # Get the UUID from the provisioning profile
        PROFILE_UUID=$(grep -A1 -a 'UUID' profile.mobileprovision | grep string | sed 's|.*<string>\(.*\)</string>.*|\1|')
        echo "Profile UUID: $PROFILE_UUID"
        
        # Copy with UUID as filename
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision
        
        # List installed profiles for debugging
        ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # Set the provisioning profile UUID for the build
        echo "PROVISIONING_PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV
        
    - name: Build iOS app
      run: |
        cd ios/App
        xcodebuild clean archive \
          -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -archivePath App.xcarchive \
          -allowProvisioningUpdates \
          CODE_SIGN_STYLE=Manual \
          DEVELOPMENT_TEAM="${{ secrets.TEAM_ID }}" \
          PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_UUID" \
          OTHER_CODE_SIGN_FLAGS="--keychain build.keychain"
          
    - name: Export IPA
      run: |
        cd ios/App
        
        # Update ExportOptions.plist with actual team ID and provisioning profile
        sed -i '' "s/YOUR_TEAM_ID/${{ secrets.TEAM_ID }}/g" ../../.github/ExportOptions.plist
        
        # Add provisioning profile specifier to export options
        cat > export_options_temp.plist << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>method</key>
    <string>app-store</string>
    <key>destination</key>
    <string>upload</string>
    <key>compileBitcode</key>
    <false/>
    <key>uploadSymbols</key>
    <true/>
    <key>uploadBitcode</key>
    <false/>
    <key>teamID</key>
    <string>${{ secrets.TEAM_ID }}</string>
    <key>provisioningProfiles</key>
    <dict>
        <key>com.beanstalker.member</key>
        <string>$PROVISIONING_PROFILE_UUID</string>
    </dict>
</dict>
</plist>
EOF
        
        xcodebuild -exportArchive \
          -archivePath App.xcarchive \
          -exportPath Export \
          -exportOptionsPlist export_options_temp.plist
          
    - name: Upload to TestFlight
      run: |
        xcrun altool --upload-app \
          --type ios \
          --file ios/App/Export/*.ipa \
          --username "${{ secrets.APPSTORE_USERNAME }}" \
          --password "${{ secrets.APPSTORE_PASSWORD }}"